name: Verifiable Build
on:
  push:
    tags:
      - 'executor-v*'

env:
  APP_NAME: autobahn_executor
  SOLANA_VERSION: "1.18.8"
  ANCHOR_VERSION: "0.30.0"
  ANCHOR_0_30_0_RELEASE_HASH: 852fcc77beb6302474a11e0f8e6f1e688021be36

jobs:
  build:
    name: Build Verifiable Artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install Solana
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v${{ env.SOLANA_VERSION }}/install)"
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          solana --version

      - name: Setup Anchor
        run: |
          cargo install --git https://github.com/coral-xyz/anchor --rev ${{ env.ANCHOR_0_30_0_RELEASE_HASH }} anchor-cli --locked --force

      - name: Verifiable Build
        # anchor build currently errors out in the IDL generation step because of our ancient used solana libs versions. It still produces the sbf binary though.
        # So we simply ignore the error and check for the produced binary.
        # Skipping IDL generation with the --no-idl flag doesn't work (for verifiable builds?).
        run: |
          anchor build --verifiable --program-name "$APP_NAME" --docker-image "backpackapp/build:v$ANCHOR_VERSION" --solana-version "$SOLANA_VERSION" --env GITHUB_SHA --env GITHUB_REF_NAME || true
          if ! [ -f "./target/verifiable/${APP_NAME}.so" ]; then
            echo "Anchor build did not produce an artifact!"
            exit 1
          fi

      - name: Generate Checksum
        run: |
          echo "CHECKSUM=$(sha256sum "./target/verifiable/${APP_NAME}.so" | head -c 64)" >> $GITHUB_ENV

      - name: Generate SBOM
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'cyclonedx'
          output: '${{ env.APP_NAME }}-${{ github.ref_name }}-sbom.json'

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: |
            sha256 checksum: ${{ env.CHECKSUM }}
            github commit: ${{ github.sha }}
          files: |
            ./target/verifiable/${{ env.APP_NAME }}.so
            ./${{ env.APP_NAME }}-${{ github.ref_name }}-sbom.json